---
- name: Create VMs
  include_tasks: create_vm.yml
  vars:
    vm_name: "{{ item.key }}"
    vm_id: "{{ proxmox_vm_starting_vmid + index }}"
    vm_network: "{{ item.value.network | default(proxmox_network) }}"
    vm_template: "{{ item.value.template }}"
    vm_storage: "{{ item.value.storage | default(proxmox_storage) }}"
    vm_groups: "{{ item.value.groups }}"
    cpu_count: "{{ item.value.cpu_count | default(default_vm_cpu_count) }}"
    memory_mb: "{{ item.value.memory_mb | default(default_vm_memory_mb) }}"
    vm_disks: "{{ item.value.disks | default({}) }}"

  loop: "{{ vm_scenarios[vm_scenario] | dict2items }}"
  loop_control:
    index_var: index

- name: "{{ vm_name }}: Get eth0 network info from VMs (wait until eth0 is up)"
  shell: "qm guest cmd {{ vm_id }} network-get-interfaces"
  changed_when: false
  retries: 20
  delay: 2
  register: __vm_net
  until:
  - __vm_net is not failed
  - "'ip-addresses' in (__vm_net.stdout | from_json | selectattr('name', 'equalto', 'eth0') | list)[0]"

- name: "{{ vm_name }}: Set fact vm_ip"
  set_fact:
    vm_ip: "{{ ((__vm_net.stdout | from_json | selectattr('name', 'equalto', 'eth0') | list)[0]['ip-addresses'] | selectattr('ip-address-type', 'equalto', 'ipv4') | list)[0]['ip-address'] }}"

- name: "{{ vm_name }}: add host to inventory"
  add_host:
    name: "{{ vm_name }}"
    groups: "{{ vm_groups }}"
    ansible_ssh_host: "{{ vm_ip }}"
    ansible_ssh_user: cloud-user
  changed_when: false
